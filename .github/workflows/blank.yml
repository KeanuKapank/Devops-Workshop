name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # This will trigger the workflow when changes are pushed to the 'main' branch.

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js (or your preferred language)
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Adjust for your projectâ€™s version

      - name: Install dependencies
        run: npm install  # Replace with the appropriate command for your language/environment

      - name: Run tests
        run: npm test  # Replace with your test command

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensures this job runs after the build job

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Example: Deploying to Heroku
      - name: Set up Heroku CLI
        uses: akshnz/heroku-cli-action@v1
        with:
          api_key: ${{ secrets.HEROKU_API_KEY }}

      - name: Deploy to Heroku
        run: |
          git remote add heroku https://git.heroku.com/${{ secrets.HEROKU_APP_NAME }}.git
          git push heroku main  # Pushes the code to Heroku for deployment

      # For AWS S3, you could use something like:
      # - name: Deploy to AWS S3
      #   uses: jakejarvis/s3-sync-action@master
      #   with:
      #     source_dir: './build'
      #     destination_bucket: ${{ secrets.S3_BUCKET_NAME }}
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: 'us-east-1'

      # For Netlify, use their CLI or deploy action
      # - name: Deploy to Netlify
      #   run: |
      #     npm install netlify-cli -g
      #     netlify deploy --prod --dir=./build


    
